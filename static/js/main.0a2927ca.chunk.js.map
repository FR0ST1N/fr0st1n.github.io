{"version":3,"sources":["Top.js","Project.js","App.js","serviceWorker.js","index.js"],"names":["Top","ITEMS","react_default","a","createElement","rel","target","href","className","index_es","icon","size","data-tip","web","items","keys","from","opacity","to","config","duration","item","props","style","dist_default","place","type","effect","Component","Details","links","this","linkElements","push","key","name","description","i","length","ELEMENTS","styles","show","overflow","enter","leave","height","React","Project","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","toggleHidden","setState","prevState","isHidden","state","_this2","onClick","Project_Details","library","add","fab","faEnvelope","faLink","faGamepad","App","renderEverything","projectElements","data","src_Project_0","src_Top_0","bind","assertThisInitialized","fetch","then","response","json","projects","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0a2927ca.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './Top.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport ReactTooltip from 'react-tooltip';\r\nimport { Trail } from 'react-spring';\r\n\r\nconst ICON_SIZE = '2x';\r\n\r\nclass Top extends Component {\r\n    render() {\r\n        const ITEMS = [\r\n            <a rel=\"noopener noreferrer\" target=\"_blank\" href=\"mailto:iamfrostin@gmail.com\" className=\"icon\"> <FontAwesomeIcon icon=\"envelope\" size={ICON_SIZE} /> </a>,\r\n            <a rel=\"noopener noreferrer\" target=\"_blank\" href=\"https://twitter.com/fr0st1n\" className=\"icon\"> <FontAwesomeIcon icon={[\"fab\", \"twitter-square\"]} size={ICON_SIZE} /> </a>,\r\n            <a rel=\"noopener noreferrer\" target=\"_blank\" href=\"https://github.com/FR0ST1N\" className=\"icon\"> <FontAwesomeIcon icon={[\"fab\", \"github-square\"]} size={ICON_SIZE} /> </a>,\r\n            <FontAwesomeIcon icon={[\"fab\", \"discord\"]} size={ICON_SIZE} data-tip=\"React-tooltip\" className=\"icon\" />\r\n        ];\r\n        const KEYS = [\"SEmail\", \"STwitter\", \"SGitHub\", \"SDiscord\"];\r\n        return (\r\n            <div className=\"main\">\r\n                <Trail\r\n                    items={ITEMS}\r\n                    keys={KEYS}\r\n                    from={{ opacity: 0 }}\r\n                    to={{ opacity: 1 }}\r\n                    config={{ duration: 1000 }}>\r\n                    {item => props =>\r\n                        <div style={props} className=\"space\">{item}</div>\r\n                    }\r\n                </Trail>\r\n                <ReactTooltip place=\"bottom\" type=\"light\" effect=\"solid\">\r\n                    <span className=\"tag\">Frostin#4956</span>\r\n                </ReactTooltip>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Top;","import React, { Component } from 'react';\r\nimport './Project.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { Transition } from 'react-spring'\r\n\r\nclass Details extends React.Component {\r\n    render() {\r\n        let links = this.props.links;\r\n        let linkElements = [];\r\n        linkElements.push(<p key={this.props.name + \"description\"} className=\"sec-text\">{this.props.description}</p>);\r\n        for (let i = 0; i < links.length; i++) {\r\n            linkElements.push(<a key={this.props.name + \"link\" + i} rel=\"noopener noreferrer\" target=\"_blank\" href={links[i][0]} className=\"project-icon\">\r\n                <FontAwesomeIcon icon={links[i][1]} size={\"lg\"} />\r\n            </a>);\r\n        }\r\n\r\n        const ELEMENTS = styles => <div style={styles}>{linkElements}</div>;\r\n        return (\r\n            <div>\r\n                <Transition\r\n                    items={this.props.show}\r\n                    from={{ overflow: 'hidden', opacity: 0 }}\r\n                    enter={{ opacity: 1 }}\r\n                    leave={{ opacity: 0, height: 0}}\r\n                    config={{ duration: 250 }}>\r\n                    {show => show && ELEMENTS}\r\n                </Transition>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass Project extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { isHidden: true };\r\n    }\r\n\r\n    toggleHidden = () => this.setState((prevState) => ({ isHidden: !prevState.isHidden }));\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"project\">\r\n                <button type=\"button\" onClick={() => this.toggleHidden()} className=\"project-name\">{this.props.name}</button>\r\n                {\r\n                    <Details description={this.props.description} links={this.props.links} show={!this.state.isHidden} />\r\n\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Project;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Top from './Top.js';\r\nimport Project from './Project.js';\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { fab } from '@fortawesome/free-brands-svg-icons';\r\nimport { faEnvelope, faLink, faGamepad } from '@fortawesome/free-solid-svg-icons';\r\nimport { Spring } from 'react-spring'\r\n\r\nconst JSON_URL = \"https://gist.githubusercontent.com/FR0ST1N/c5986e51112681adc998ca63b3c239ba/raw/projects.json\";\r\nlibrary.add(fab, faEnvelope, faLink, faGamepad);\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { data: null };\r\n    this.renderEverything = this.renderEverything.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(JSON_URL)\r\n      .then(response => response.json())\r\n      .then(data => this.setState({ data: data.projects }));\r\n  }\r\n\r\n  renderEverything = () => {\r\n    let projectElements = [];\r\n    projectElements.push(<h3 key=\"projects\">Projects</h3>);\r\n    for (let i = 0; i < this.state.data.length; i++) {\r\n      projectElements.push(\r\n        <Project key={this.state.data[i].name} name={this.state.data[i].name} description={this.state.data[i].description} links={this.state.data[i].links} />\r\n      );\r\n    }\r\n    projectElements.push(<a key=\"more\" className=\"a-style\" rel=\"noopener noreferrer\" target=\"_blank\" href=\"https://github.com/FR0ST1N\">More On GitHub</a>);\r\n\r\n    return (\r\n      <div>\r\n        <Top />\r\n        <Spring\r\n          from={{ opacity: 0 }}\r\n          to={{ opacity: 1 }}\r\n          config={{ duration: 1000 }}>\r\n          {props => <div style={props}>{projectElements}</div>}\r\n        </Spring>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        {\r\n          this.state.data != null ? this.renderEverything() : null\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}