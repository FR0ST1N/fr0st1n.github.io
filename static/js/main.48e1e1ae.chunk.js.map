{"version":3,"sources":["Top.js","Project.js","App.js","serviceWorker.js","index.js"],"names":["Top","ITEMS","react_default","a","createElement","rel","key","target","href","className","index_es","icon","size","data-tip","web","items","keys","from","opacity","to","config","duration","item","props","style","dist_default","place","type","effect","Component","Details","links","this","linkElements","push","name","description","i","length","ELEMENTS","styles","show","overflow","enter","leave","height","React","Project","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","toggleHidden","setState","prevState","isHidden","state","_this2","onClick","Project_Details","library","add","fab","faEnvelope","faLink","faGamepad","App","renderEverything","projectElements","data","src_Project_0","src_Top_0","bind","assertThisInitialized","fetch","then","response","json","projects","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.48e1e1ae.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport './Top.css'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport ReactTooltip from 'react-tooltip'\nimport { Trail } from 'react-spring'\n\nconst ICON_SIZE = '2x'\n\nclass Top extends Component {\n  render () {\n    const ITEMS = [\n      <a rel='noopener noreferrer' key='email_link' target='_blank' href='mailto:iamfrostin@gmail.com' className='icon'> <FontAwesomeIcon key='email' icon='envelope' size={ICON_SIZE} /> </a>,\n      <a rel='noopener noreferrer' key='twitter_link' target='_blank' href='https://twitter.com/fr0st1n' className='icon'> <FontAwesomeIcon key='twitter' icon={['fab', 'twitter-square']} size={ICON_SIZE} /> </a>,\n      <a rel='noopener noreferrer' key='github_link' target='_blank' href='https://github.com/FR0ST1N' className='icon'> <FontAwesomeIcon key='github' icon={['fab', 'github-square']} size={ICON_SIZE} /> </a>,\n      <FontAwesomeIcon key='discord' icon={['fab', 'discord']} size={ICON_SIZE} data-tip='React-tooltip' className='icon' />\n    ]\n    const KEYS = ['SEmail', 'STwitter', 'SGitHub', 'SDiscord']\n    return (\n      <div className='main'>\n        <Trail\n          items={ITEMS}\n          keys={KEYS}\n          from={{ opacity: 0 }}\n          to={{ opacity: 1 }}\n          config={{ duration: 1000 }}\n        >\n          {item => props =>\n            <div style={props} className='space'>{item}</div>}\n        </Trail>\n        <ReactTooltip place='bottom' type='light' effect='solid'>\n          <span className='tag'>Frostin#4956</span>\n        </ReactTooltip>\n      </div>\n    )\n  }\n}\n\nexport default Top\n","import React, { Component } from 'react'\nimport './Project.css'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { Transition } from 'react-spring'\n\nclass Details extends React.Component {\n  render () {\n    const links = this.props.links\n    const linkElements = []\n    linkElements.push(<p key={this.props.name + 'description'} className='sec-text'>{this.props.description}</p>)\n    for (let i = 0; i < links.length; i++) {\n      linkElements.push(\n        <a key={this.props.name + 'link' + i} rel='noopener noreferrer' target='_blank' href={links[i][0]} className='project-icon'>\n          <FontAwesomeIcon icon={links[i][1]} size='lg' />\n        </a>)\n    }\n\n    const ELEMENTS = styles => <div style={styles}>{linkElements}</div>\n    return (\n      <div>\n        <Transition\n          items={this.props.show}\n          from={{ overflow: 'hidden', opacity: 0 }}\n          enter={{ opacity: 1 }}\n          leave={{ opacity: 0, height: 0 }}\n          config={{ duration: 250 }}\n        >\n          {show => show && ELEMENTS}\n        </Transition>\n      </div>\n    )\n  }\n}\n\nclass Project extends Component {\n  constructor (props) {\n    super(props)\n    this.state = { isHidden: true }\n  }\n\n    toggleHidden = () => this.setState((prevState) => ({ isHidden: !prevState.isHidden }));\n\n    render () {\n      return (\n        <div className='project'>\n          <button type='button' onClick={() => this.toggleHidden()} className='project-name'>{this.props.name}</button>\n          {\n            <Details description={this.props.description} links={this.props.links} show={!this.state.isHidden} />\n\n          }\n        </div>\n      )\n    }\n}\n\nexport default Project\n","import React, { Component } from 'react'\nimport './App.css'\nimport Top from './Top.js'\nimport Project from './Project.js'\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { fab } from '@fortawesome/free-brands-svg-icons'\nimport { faEnvelope, faLink, faGamepad } from '@fortawesome/free-solid-svg-icons'\nimport { Spring } from 'react-spring'\n\nconst JSON_URL = 'https://gist.githubusercontent.com/FR0ST1N/c5986e51112681adc998ca63b3c239ba/raw/projects.json'\nlibrary.add(fab, faEnvelope, faLink, faGamepad)\n\nclass App extends Component {\n  constructor (props) {\n    super(props)\n    this.state = { data: null }\n    this.renderEverything = this.renderEverything.bind(this)\n  }\n\n  componentDidMount () {\n    fetch(JSON_URL)\n      .then(response => response.json())\n      .then(data => this.setState({ data: data.projects }))\n  }\n\n  renderEverything = () => {\n    const projectElements = []\n    projectElements.push(<h3 key='projects'>Projects</h3>)\n    for (let i = 0; i < this.state.data.length; i++) {\n      projectElements.push(\n        <Project key={this.state.data[i].name} name={this.state.data[i].name} description={this.state.data[i].description} links={this.state.data[i].links} />\n      )\n    }\n    projectElements.push(<a key='more' className='a-style' rel='noopener noreferrer' target='_blank' href='https://github.com/FR0ST1N'>More On GitHub</a>)\n\n    return (\n      <div>\n        <Top />\n        <Spring\n          from={{ opacity: 0 }}\n          to={{ opacity: 1 }}\n          config={{ duration: 1000 }}\n        >\n          {props => <div style={props}>{projectElements}</div>}\n        </Spring>\n      </div>\n    )\n  };\n\n  render () {\n    return (\n      <div className='App'>\n        {\n          this.state.data != null ? this.renderEverything() : null\n        }\n      </div>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register (config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW (swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker (swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}